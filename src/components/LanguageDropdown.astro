---
import { Image } from "astro:assets";
import languagesIcon from "../assets/images/icons/languages-icon.svg";
import { getLangFromUrl } from '../i18n/ui';

const lang = getLangFromUrl(Astro.url);

const languages = [
  { code: 'en', name: 'English', native: 'English' },
  { code: 'sv', name: 'Sweden', native: 'Sweden' },
  { code: 'bs', name: 'Bosanski', native: 'Bosanski' },
  { code: 'ar', name: 'العربية', native: 'العربية' },
  { code: 'ku', name: 'کوردی', native: 'کوردی' },
  { code: 'sy', name: 'ܣܘܪܝܝܐ', native: 'ܣܘܪܝܝܐ' }
];
---

<div class="language-dropdown">
  <button class="language-dropdown__trigger" aria-expanded="false" aria-haspopup="true">
    <Image src={languagesIcon} alt="Languages icon" width={20} height={20} />
    <span class="language-dropdown__current">{lang.toUpperCase()}</span>
    <svg class="language-dropdown__arrow" width="12" height="8" viewBox="0 0 12 8" fill="none">
      <path d="M1 1L6 6L11 1" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>
  </button>
  
  <ul class="language-dropdown__menu" role="menu">
    {languages.map((language) => (
      <li class="language-dropdown__item" role="none">
        <button 
          class={`language-dropdown__option ${language.code === lang ? 'language-dropdown__option--active' : ''}`}
          data-lang={language.code}
          role="menuitem"
        >
          <span class="language-dropdown__code">{language.code.toUpperCase()}</span>
          <span class="language-dropdown__name">{language.native}</span>
        </button>
      </li>
    ))}
  </ul>
</div>

<script>
  /**
   * @typedef {Object} LanguageDropdown
   * @property {HTMLElement} dropdown
   * @property {HTMLButtonElement} trigger
   * @property {HTMLElement} menu
   * @property {NodeList} options
   */
  
  class LanguageDropdown {
    /**
     * @type {HTMLElement}
     */
    dropdown;
    
    /**
     * @type {HTMLButtonElement}
     */
    trigger;
    
    /**
     * @type {HTMLElement}
     */
    menu;
    
    /**
     * @type {NodeList}
     */
    options;
    
    constructor(element) {
      this.dropdown = element;
      this.trigger = element.querySelector('.language-dropdown__trigger');
      this.menu = element.querySelector('.language-dropdown__menu');
      this.options = element.querySelectorAll('.language-dropdown__option');
      
      this.init();
    }
    
    init() {
      this.trigger.addEventListener('click', () => this.toggle());
      this.options.forEach(option => {
        option.addEventListener('click', (e) => this.selectLanguage(e));
      });
      
      // Close dropdown when clicking outside
      document.addEventListener('click', (e) => {
        if (!this.dropdown.contains(e.target)) {
          this.close();
        }
      });
      
      // Close on escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
          this.close();
        }
      });
    }
    
    toggle() {
      const isExpanded = this.trigger.getAttribute('aria-expanded') === 'true';
      if (isExpanded) {
        this.close();
      } else {
        this.open();
      }
    }
    
    open() {
      this.trigger.setAttribute('aria-expanded', 'true');
      this.menu.classList.add('language-dropdown__menu--open');
      this.trigger.classList.add('language-dropdown__trigger--open');
    }
    
    close() {
      this.trigger.setAttribute('aria-expanded', 'false');
      this.menu.classList.remove('language-dropdown__menu--open');
      this.trigger.classList.remove('language-dropdown__trigger--open');
    }
    
    selectLanguage(event) {
      const option = event.currentTarget;
      const langCode = option.dataset.lang;
      
      // Close dropdown
      this.close();
      
      // Navigate to the selected language
      if (langCode === 'en') {
        window.location.href = '/';
      } else {
        window.location.href = `/${langCode}/`;
      }
    }
  }
  
  // Initialize all language dropdowns
  document.addEventListener('DOMContentLoaded', () => {
    const dropdowns = document.querySelectorAll('.language-dropdown');
    dropdowns.forEach(dropdown => new LanguageDropdown(dropdown));
  });
</script> 